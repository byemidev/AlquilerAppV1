// <auto-generated />
using System;
using AlquileresMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlquileresMVC.Migrations
{
    [DbContext(typeof(AdminDbContext))]
    [Migration("20240722174255_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlquileresMVC.Models.Admin.Extra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Extras");
                });

            modelBuilder.Entity("AlquileresMVC.Models.Admin.MetodoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MetodoPago");
                });

            modelBuilder.Entity("AlquileresMVC.Models.Admin.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FKmetodoId")
                        .HasColumnType("int");

                    b.Property<int>("FKusuarioId")
                        .HasColumnType("int");

                    b.Property<int>("FKvehiculoId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaEntrada")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaSalida")
                        .HasColumnType("date");

                    b.Property<int>("metodoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FKmetodoId");

                    b.HasIndex("FKusuarioId");

                    b.HasIndex("FKvehiculoId");

                    b.HasIndex("metodoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("AlquileresMVC.Models.Admin.ReservaExtras", b =>
                {
                    b.Property<int>("FKreservaId")
                        .HasColumnType("int");

                    b.Property<int>("FKextraId")
                        .HasColumnType("int");

                    b.HasKey("FKreservaId", "FKextraId");

                    b.HasIndex("FKextraId");

                    b.ToTable("ReservaExtras");
                });

            modelBuilder.Entity("AlquileresMVC.Models.Admin.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("carnetFechaExpedicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AlquileresMVC.Models.Admin.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("precioDia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("AlquileresMVC.Models.Admin.Reserva", b =>
                {
                    b.HasOne("AlquileresMVC.Models.Admin.MetodoPago", null)
                        .WithMany()
                        .HasForeignKey("FKmetodoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlquileresMVC.Models.Admin.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("FKusuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlquileresMVC.Models.Admin.Vehiculo", "vehiculo")
                        .WithMany()
                        .HasForeignKey("FKvehiculoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlquileresMVC.Models.Admin.MetodoPago", "metodo")
                        .WithMany()
                        .HasForeignKey("metodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("metodo");

                    b.Navigation("usuario");

                    b.Navigation("vehiculo");
                });

            modelBuilder.Entity("AlquileresMVC.Models.Admin.ReservaExtras", b =>
                {
                    b.HasOne("AlquileresMVC.Models.Admin.Extra", "extra")
                        .WithMany("OrderExtras")
                        .HasForeignKey("FKextraId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlquileresMVC.Models.Admin.Reserva", "reserva")
                        .WithMany("ExtrasReserva")
                        .HasForeignKey("FKreservaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("extra");

                    b.Navigation("reserva");
                });

            modelBuilder.Entity("AlquileresMVC.Models.Admin.Extra", b =>
                {
                    b.Navigation("OrderExtras");
                });

            modelBuilder.Entity("AlquileresMVC.Models.Admin.Reserva", b =>
                {
                    b.Navigation("ExtrasReserva");
                });
#pragma warning restore 612, 618
        }
    }
}
